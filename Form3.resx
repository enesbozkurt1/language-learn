<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnkayit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAGj9AABo/QEc5huJAAAAB3RJ
        TUUH5gMZDAgbLd6KegAAAu9JREFUaEPtmcvrTGEcxo/7JdmQUi65LIRk4R9AEjussLMghCizsJlbSZOV
        jfAz2ViQW5FrUcolRVGKWLhn7w/g8+g5mfmZGefMvGfMqXnqU3Pe93t5n5lzn2ioofqgcrkcVSqVqFQq
        zYD5gZkDk8HdMpCKw0y4DZ/hHbwPhGpdgCXgjoGlwjAPPsBPuA5bYBNs7gHlb4fXcBzcMbBUGPRzv4FL
        ICN7YSw4Kr20ayofzsKZXmp1lJvEBtbBPvgKu2A8ODK9lAtafN8MrK7X69o+CN9Bv8Q4cHQ6KQ/6a8Db
        +uZl4hvsh65MKAf+iwERm9DutNPbzkomxYMWP1IsFqNareaZgHKTJgMN47GJrnYnxYIMnCsUClG1WvVM
        QLnJXwYkzzXuTjrAE5tQHMjAeRiTNC+V3KSlAUmnQ5CJQ/AFtipmdFwrOe40XISeTstt5SZtDUgas4ki
        6MK0oFXcaCkGTsI1SH0MJZKbdDQgOW4xfIRt7eIa5ZwTcAMmJMlJLTdJakC3HJ9AB7Rn2ss5uo24AxOT
        5KSWm2Rp4Cjch2zuSt0kSwPSQ5gCngkoFYUsDRyBXBs4DLk2cABybUBX76GBtnKTLA0o9glMS5KTWm6S
        pYG1oMfUjd72bCC5aJYGdAHTDd1bWKWxoFJByMSA5Dy9c7oCV2GSxoJJxSAzA5Jz9ZpFPfSyyzMB5OL9
        MKDa6qFengkgFx8a6CTn9sXAmnbFHTewBmbBK9jjbc/+kcd7MbABdCpVDc8EkIr59foxeAkrNSYa5TE1
        1yPlYzgF8Uurf6HrwDPQs3H4K7IKwmy4B2q0zGOO6NnACOgLWgRNdYMoLgpz4Sa8gCYT/tzVLtQ3eZF6
        ZaKHcN2ArfBYPgxIDQvVg/hTWOqxXBmIF3sLnkNsYvANxPKCF8JdeATLQcdIPgxIWiToW38AMrEedBba
        DY4aYGmRRiZ0dtK/mD9gBzgqB9JiQe9FL4N+jd+n2FxJC4apMD3+B3KooQZaUfQLdk+I2GBsLMMAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DVTXGSxjFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>