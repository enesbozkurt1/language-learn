<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAGj9AABo/QEc5huJAAAAB3RJ
        TUUH5gMZDAkGV8PX4gAABmZJREFUaEPtmWeIXUUYhtcee4u99xqVNepasCvWgBL1h4qKxq6IDQV3N1k3
        uqjIigUFK0QjKvbeFcGKvfcuKvrP/z7P4T0he3PuvWdb9Me+8HD2znwzc86Ub76Z7ZjQhP4HmjlzZses
        WbMW4bkibA0HwilwTjgdDoUdYFVYFFL6P5IvENaEY+AGeBO+ha/gA3g1vJu07+A9uB1Ogo3BD0+tC0E2
        lkbXg0vgffgBnoCLYR/wxSbD0mFl2BB2hzPhfvBDP4erYEsY/1GxAVgGzgAb/xh86c1hKYhlc2kDS8AG
        MAPegO9BrQKxHENZadgE7gZ7/ErwJYq84aosB47UBWCHPAdT+/v7R1RnpVicHb29vVa4E7wDb8HeMCZz
        1zrCtuA0/AamzZ49e/QfYQVhD/gMHgTn/ugrb1DqdK1cDz/B9M7OzqIDR6TBwcGy0u3hI7gPVjdtvGTd
        sCxcC66LA5IWi2EoBXWRzsunYC3Txlu2AcvBLaArdl9Jbk1ZAJzjLlSnzhamLSzZFqwBr8G9oCtObg1p
        DHuBG48bTpFWV7FfDFaCtWEFqO3ntQv7gu9wXJnWVjH0ix+Bh/J3cptLm6BbPBbsOb2W7lHPdRdMA8ON
        lGoubfr6+pwFV8PbsFqdcuVL6HX0BIfUKaSN3oKnPfY62Gt3wllwPJwHOoGfwfW0HbT1MNrAFNC12inJ
        aSINEpQZ1zwNeoTkVsv87BMGazY0F/Tp86aMT1gc7JhnwMXZCUVeMyXfem6Gx6H1bDAT1oFPwG0+Oc2V
        MpvCp3Ab6EGSO1Smg97sMXgJ2rpl82E/0K1ObWkfY+epxlu1NEbmd3V1+XSeGtP48cmtlvlg8PY1XOhv
        5npyF1Ts/WjX0vn+bqoYW6nhr7ticqoV+3XBETstv5NbLfMHBgZ8DoJ7jMFhcheUeeD0exgc4eo2ygxw
        A5nLWmjr9mLv8Boatx2xUinnmvGMYICYnGrFvg/84OqoN0ZLgovMDSw5zZUyJ4JTbv06ZVTKuYiNal3Y
        yalW7E+GD6HancbIVe4J6txKowalzNGg9ylC6zpKuS7ww3dsVy72B8GXUN1OjMoP8BybnOZKGcNs/f6u
        dcqolHPkPBC1jbFi70nPhTzmH7A8vALX5HdyqxWbSaArnQN115oXBV9Ayw9wgbhQLq80alB2XynXgTtx
        kValMg+mgzv94f5up5SxDcP66r0jRnIrzMmOnNzmShlH4QHwgO+UKtLnV9Ls7YPBKefe4dk4Fs2lDXTD
        i+DoJadBMfSQ7vWIEWRyWivl3MQ8sTkSF4Hu0cb04fp643pvIH6Bm6BW/dqAka03GXfkd3IblEyH15fw
        piE57ZWyXlpdAX/Bj/AC+FGuq9/As4WXXLUiXKUd6Dpd8Je2LBdj729c7UUM3k4p41QwgLOBl+FP8IWN
        Pu1x//4HXIQDsDM0nwrzSRtwr7BTd2tZJsbOU7dszwNN73pMD5uB0aKL0vjfHXN/MMBzcxMvuvYEp6cf
        6IcZXhfBmVTJ9O7ubp+ekZ+HttFx+VK+gLtk4VUaFRvn9pHgwnXNnACTe3p6ivxGmRZc8AaM7vgGdKdC
        ZUeZBgZ+jpx3rUVaS8XIRnSn+ukhnsK/wUVlw7+DZ4fCtUkdxdY2vJr8FfQwQ4I6/845Q+k+610qaBTc
        ul2I9vL86eIpy5f3Rq3WXG6UZcCOOApcI70wb1PzCbpkwxSvMou0WoqxU8TeNbTeKGli7OIi1yUa/KXU
        8GVZ8KXPBqesU6tM957U46e3dbVd+jxZAPRIHsi9D7USh/lReDK/Yz1yWQeUneXh3eloxxgR2/u7QKyH
        ocw/sQIrsgEjT6eVZ4BYjl7WBd49ObJGwm6ETqsjoMgfkcrC4NDqMf6Ge2BUU6dR1hX6wTbsJG80XCOx
        GqGsIHjF4mbiYXxKOUKjlXUE9wu93h8wo86JsLasKC/sRa/u1SOkdz3evBX5I1HKuq688/G05Rpwwxu7
        ly9lhcGbt8vAKeWu6lHPK/fhRK/aGt8Yd7njO2WuA51GYTNusvKE2kaXN4Kj4Z2Q4YSL3MO9NxV6KYM2
        8a7IO1LDjsPAw4//7NN1ehHmaW708304srE0apzjNu89qlu+HyS6X2+XxTsjR8x0n8+CdzzbwJg6hBHJ
        F4DyH3e6WMOMHjDud2Q84bmbephxFCaVp7kJTWhCo1FHx79T9v3Q25FWOwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rNaly/8BFIaPlcXOYpMAAAAASUVORK5CYII=
</value>
  </data>
</root>